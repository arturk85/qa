pipeline {
    agent any
    triggers {
        cron('40 15 * * *')
    }

    parameters {
        choice(name: 'ENVIRONMENT', choices: ['dev','test','stage','prd'], description: 'Choose env')
        choice(name: 'BROWSER', choices: ['firefox','chrome','edge'], description: 'Choose browser')
        choice(name: 'MACHINE', choices: ['remote','local'], description: 'Choose machine')
        string(name: 'REMOTE_URL', defaultValue: 'http://172.17.2.193:4444/wd/hub', description: 'Remote selenium grid')
        choice(name: 'TAG', choices: ['notification','frontend','smoke','param','nested','myfirst','schooltest','wordpress'], description: 'Choose tag')
        choice(name: 'CUCUMBER_TAG', choices: ['@BDD','@login','@wordpress'], description: 'Choose cucumber tag')
        choice(name: 'EX_TAG', choices: ['','notification','frontend','junit','smoke','param','nested','myfirst','schooltest','wordpress'], description: 'Choose tag')
        choice(name: 'PLATFORM', choices: ['windows','linux'], description: 'Choose platform')
    }
    stages {
        stage('checkout'){
            steps{
                git branch: 'develop', url: 'https://github.com/arturk85/qa'
            }
        }
        stage('build'){
            steps{
                sh "mvn clean test -Dgroups=${params.TAG} -DexcludedGroups=${params.EX_TAG} -DENVIRONMENT=${params.ENVIRONMENT} -DBROWSER=${params.BROWSER} -DMACHINE=${params.MACHINE} -DPLATFORM=${params.PLATFORM} -pl qagui"
            }
        }
    }
    post{
        always{
            allure([
                includeProperties: false,
                jdk: '',
                properties: [[key: 'allure.issues.tracker.pattern', value: 'http://tracker.company.com/%s'],
                [key: 'allure.tests.management.pattern', value: 'http://tms.company.com/%s'],
                ],
                reportBuildPolicy: 'ALWAYS',
                results: [[path: 'qagui/target/allure-results']]
            ])
            cucumber buildStatus: 'UNSTABLE', failedFeaturesNumber: -1, failedScenariosNumber: -1, failedStepsNumber: -1, fileIncludePattern: '**/*cucumber.json', jsonReportDirectory: 'qagui/target/', pendingStepsNumber: -1, skippedStepsNumber: -1, sortingMethod: 'ALPHABETICAL', undefinedStepsNumber: -1
        }
    }
}